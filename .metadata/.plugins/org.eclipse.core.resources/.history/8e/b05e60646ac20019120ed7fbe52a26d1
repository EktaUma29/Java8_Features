package com.javacodegeeks.tdd.calculator;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class CalculatorTest {

	@Rule
	public ExpectedException thrown = ExpectedException.none();

	Calculator calculator = new Calculator();

/*	@Test
	public void shouldReturnZeroWhenStringIsEmpty() throws NegativesNotAllowed {

		int sum = calculator.addition("");
		assertEquals(0, sum);
	}

	@Test
	public void shouldReturnSameNumberWhenNumberIsOneDigit() throws NegativesNotAllowed {
		int sum = calculator.addition("1");
		assertEquals(1, sum);
	}

	@Test
	public void shouldReturnSumIfTwoNumbersIsGiven() throws NegativesNotAllowed {
		int sum = calculator.addition("5,6");
		assertEquals(11, sum);
	}

	@Test
	public void shouldReturnSumOFAllNumbers() throws NegativesNotAllowed {
		int sum = calculator.addition("1,2,3,4,5");
		assertEquals(15, sum);
	}

	@Test
	public void shouldReturnSumOfAllNumbersAndAcceptNewLineDelimiter() throws NegativesNotAllowed {
		int sum = calculator.addition("1\n2,3");
		assertEquals(6, sum);
	}

	@Test
	public void shouldReturnSumOfAllNumbersAndAcceptOthersDelimiter() throws NegativesNotAllowed {
		int sum = calculator.addition("//;\n1;2");
		assertEquals(3, sum);
	}*/

	@Test
	public void shouldThrowExceptionIfNumberIsNegative() {
		//
		thrown.expect(NegativesNotAllowed.class);
		thrown.expectMessage("Negatives Number Not Allowed");
		calculator.addition("-2");
	}
}
